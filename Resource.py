#!/usr/bin/env python# -*- coding: utf-8 -*-#玩家资源class _Resource():    def __init__(self,acer = 0,copper = 50000,book = 0,soul = 0,forage = 60,feats = 0,medal = 0,friendpoint = 0):        #self.resource = {'acer':acer,'copper':copper,'book':book,'soul':soul,'forage':forage,'feats':feats,'medal':medal,'friendpoint':friendpoint}        self.acer = acer        self.copper = copper        self.book = book        self.soul = soul        self.forage = forage        self.feats = feats        self.medal = medal        self.friendpoint = friendpoint    def getResWithNameOrType(self,pNameorType,isName = False):        if isName:            if pNameorType == 'acer':                return self.acer            elif pNameorType == 'copper':                return self.copper            elif pNameorType == 'book':                return self.book            elif pNameorType == 'soul':                return self.soul            elif pNameorType == 'forage':                return self.forage            elif pNameorType == 'feats':                return self.feats            elif pNameorType == 'medal':                return self.medal            elif pNameorType == 'friendpoint':                return self.friendpoint            else:                return None        else:            if pNameorType == 1:                return self.acer            elif pNameorType == 2:                return self.copper            elif pNameorType == 3:                return self.book            elif pNameorType == 4:                return self.soul            elif pNameorType == 5:                return self.forage            elif pNameorType == 6:                return self.feats            elif pNameorType == 7:                return self.medal            elif pNameorType == 8:                return self.friendpoint            else:                return None    def setResWithNameOrType(self,pNameorType,pvalue,isName = False):        if isName:            if pNameorType == 'acer':                self.acer = pvalue            elif pNameorType == 'copper':                self.copper = pvalue            elif pNameorType == 'book':                self.book = pvalue            elif pNameorType == 'soul':                self.soul = pvalue            elif pNameorType == 'forage':                self.forage = pvalue            elif pNameorType == 'feats':                self.feats = pvalue            elif pNameorType == 'medal':                self.medal = pvalue            elif pNameorType == 'friendpoint':                self.friendpoint = pvalue        else:            if pNameorType == 1:                self.acer = pvalue            elif pNameorType == 2:                self.copper = pvalue            elif pNameorType == 3:                self.book = pvalue            elif pNameorType == 4:                self.soul = pvalue            elif pNameorType == 5:                self.forage = pvalue            elif pNameorType == 6:                self.feats = pvalue            elif pNameorType == 7:                self.medal = pvalue            elif pNameorType == 8:                self.friendpoint = pvalue    def getResourceForDic(self):        return {'acer':self.acer,'copper':self.copper,'book':self.book,'soul':self.soul,'forage':self.forage,'feats':self.feats,'medal':self.medal,'friendpoint':self.friendpoint}    def getResourceForProtobuff(self,tmp,ptype = 0):        #tmp = Cmds_pb2.Resource()        if ptype == 0:            tmp.acer = self.acer            tmp.copper = self.copper            tmp.book = self.book            tmp.soul = self.soul            tmp.forage = self.forage            tmp.feats = self.feats            tmp.medal = self.medal            tmp.friendpoint = self.friendpoint        elif ptype == 1:            tmp.acer = self.acer        elif ptype == 2:            tmp.copper = self.copper        elif ptype == 3:            tmp.book = self.copper        elif ptype == 4:            tmp.soul = self.soul        elif ptype == 5:            tmp.forage = self.forage        elif ptype == 6:            tmp.feats = self.feats        elif ptype == 7:            tmp.medal = self.medal        elif ptype == 8:            tmp.friendpoint = self.friendpoint        return tmp    def getResourceForProtobuffString(self):        return self.getResourceForProtobuff().SerializePartialToString()