#!/usr/bin/env python# -*- coding: utf-8 -*-import taskFlogimport timeclass task():    def __init__(self,puser):        self.user = puser        self.daytask = {}           #已完成日常任务奖励是否领取{id:奖励是否领取}        self.storytask = {}         #已完成剧情任务奖励是否领取{id:奖励是否领取}        self.stagePassTimes = 0     #关卡通关次数        self.heroLeveUpTimes = 0    #英雄升级次数        self.heroStarUpTimes = 0    #英雄升星次数        self.equipLeveUpTimes = 0   #装备升级次数        self.equipStarUpTimes = 0   #装备升星次数        self.skillLeveUpTimes = 0   #升级士兵次数        self.TowerTimes = 0         #完成试练塔次数        self.PKTimes = 0            #军机处PK次数        self.resPKTimes = 0         #完成风云争霸次数                self.stataCompleteNoGet = 1            #任务默认状态,任务完成未领取        self.stataNoComplete = 2                #任务未完成        self.stataCompleteGeted = 3             #任务已完成已领取                self.lastPassStage = 0      #最近一次通关关卡ID        self.lastTowerStep = 0      #最近通关塔的层数                self.userLeveTask = {}      #玩家等级相关任务        self.stageTask = {}    #通过关卡类任务        self.heroLeveUpTask = {}    #武将升级相关任务        self.skillLeveUpTask = {}   #技能升级相关任务        self.equipLeveUpTask = {}   #装备升级相关任务        self.userPKTask = {}        #军机处PK相关任务        self.towerTask = {}         #试练塔相关任务        self.resPKTask = {}         #风云争霸相关任务        self.passStageTimeTask = {} #通关次数相关任务        self.initTaskFromTab()    #获取任务奖励    def getTaskReward(self,tasktid):        if self.daytask.has_key(tasktid):            if self.daytask[tasktid] != 1:                return 1,False            else:                return 1,True        elif self.storytask.has_key(tasktid):            if self.storytask[tasktid] != 1:                return 2,False            else:                return 2,True    def setTaskRewarded(self,tasktid,ptasktype):        if ptasktype == 1 and self.daytask.has_key(tasktid):            self.daytask[tasktid] = 1                    elif ptasktype == 2 and self.storytask.has_key(tasktid):            self.storytask[tasktid] = 1        else:            print "设置任务完成时未找到任务,taskid:%d"%(tasktid)    def getTaskToProtbuf(self,pTasks,tasktid):        tid = tasktid        if self.daytask.has_key(tasktid):            tabtmp = self.user.userCacheT.getConfigDataWithTableNameAndID('tab_task',tid)            if int(tabtmp['task_win']) == 1:#玩家等级任务                tasktmp = pTasks.add()                tasktmp.taskCID = tid                tasktmp.stats = self.daytask[tid]                       tasktmp.taskProcess = self.user.userBase.level #返回当前玩家等级            elif int(tabtmp['task_win']) == 2:#完成第N关任务                tasktmp = pTasks.add()                tasktmp.taskCID = tid                tasktmp.stats = self.daytask[tid]                tasktmp.taskProcess = -1 #返回当前玩家等级            elif int(tabtmp['task_win']) == 3:#武将升级                tasktmp = pTasks.add()                tasktmp.taskCID = tid                tasktmp.stats = self.daytask[tid]                tasktmp.taskProcess = self.heroLeveUpTimes #返回给英雄升级次数            elif int(tabtmp['task_win']) == 4:#装备升级                tasktmp = pTasks.add()                tasktmp.taskCID = tid                tasktmp.stats = self.daytask[tid]                tasktmp.taskProcess = self.equipLeveUpTimes #返回给升级次数            elif int(tabtmp['task_win']) == 5:#技能升级                tasktmp = pTasks.add()                tasktmp.taskCID = tid                tasktmp.stats = self.daytask[tid]                tasktmp.taskProcess = self.skillLeveUpTimes #返回给升级次数            elif int(tabtmp['task_win']) == 6:#完成军机处                tasktmp = pTasks.add()                tasktmp.taskCID = tid                tasktmp.stats = self.daytask[tid]                tasktmp.taskProcess = self.PKTimes #返回给军机处攻打次数            elif int(tabtmp['task_win']) == 7:#完成试练塔                tasktmp = pTasks.add()                tasktmp.taskCID = tid                tasktmp.stats = self.daytask[tid]                tasktmp.taskProcess = self.TowerTimes #返回给试练塔攻打次数            elif int(tabtmp['task_win']) == 8:#完成风云争霸                tasktmp = pTasks.add()                tasktmp.taskCID = tid                tasktmp.stats = self.daytask[tid]                tasktmp.taskProcess = self.resPKTimes #返回风云争霸挑战次数            elif int(tabtmp['task_win']) == 9:#完成N次关卡                tasktmp = pTasks.add()                tasktmp.taskCID = tid                tasktmp.stats = self.daytask[tid]                tasktmp.taskProcess = self.stagePassTimes #返回风云争霸挑战次数        elif self.storytask.has_key(tid):            tabtmp = self.user.userCacheT.getConfigDataWithTableNameAndID('tab_task',tid)            if int(tabtmp['task_win']) == 1:#玩家等级任务                tasktmp = pTasks.add()                tasktmp.taskCID = tid                tasktmp.stats = self.storytask[tid]                tasktmp.taskProcess = self.user.userBase.level #返回当前玩家等级            elif int(tabtmp['task_win']) == 2:#完成第N关任务                tasktmp = pTasks.add()                tasktmp.taskCID = tid                tasktmp.stats = self.storytask[tid]                tasktmp.taskProcess = self.lastPassStage #返回最近一次打通的关卡            elif int(tabtmp['task_win']) == 3:#武将升级                tasktmp = pTasks.add()                tasktmp.taskCID = tid                tasktmp.stats = self.storytask[tid]                tasktmp.taskProcess = self.heroLeveUpTimes #返回给英雄升级次数            elif int(tabtmp['task_win']) == 4:#装备升级                tasktmp = pTasks.add()                tasktmp.taskCID = tid                tasktmp.stats = self.storytask[tid]                tasktmp.taskProcess = self.equipLeveUpTimes #返回给升级次数            elif int(tabtmp['task_win']) == 5:#技能升级                tasktmp = pTasks.add()                tasktmp.taskCID = tid                tasktmp.stats = self.storytask[tid]                tasktmp.taskProcess = self.skillLeveUpTimes #返回给升级次数            elif int(tabtmp['task_win']) == 6:#完成军机处                tasktmp = pTasks.add()                tasktmp.taskCID = tid                tasktmp.stats = self.storytask[tid]                tasktmp.taskProcess = self.PKTimes #返回给军机处攻打次数            elif int(tabtmp['task_win']) == 7:#完成试练塔                tasktmp = pTasks.add()                tasktmp.taskCID = tid                tasktmp.stats = self.storytask[tid]                tasktmp.taskProcess = self.TowerTimes #返回给试练塔攻打次数            elif int(tabtmp['task_win']) == 8:#完成风云争霸                tasktmp = pTasks.add()                tasktmp.taskCID = tid                tasktmp.stats = self.storytask[tid]                tasktmp.taskProcess = self.resPKTimes #返回风云争霸挑战次数            elif int(tabtmp['task_win']) == 9:#完成N次关卡                tasktmp = pTasks.add()                tasktmp.taskCID = tid                tasktmp.stats = self.storytask[tid]                tasktmp.taskProcess = self.stagePassTimes #返回风云争霸挑战次数:        else:            return    def getTaskList(self,pTasks):        for tid in self.daytask.keys():            tabtmp = self.user.userCacheT.getConfigDataWithTableNameAndID('tab_task',tid)            if int(tabtmp['task_win']) == 1:#玩家等级任务                tasktmp = pTasks.add()                tasktmp.taskCID = tid                tasktmp.stats = self.daytask[tid]                       tasktmp.taskProcess = self.user.userBase.level #返回当前玩家等级            elif int(tabtmp['task_win']) == 2:#完成第N关任务                tasktmp = pTasks.add()                tasktmp.taskCID = tid                tasktmp.stats = self.daytask[tid]                tasktmp.taskProcess = -1 #返回当前玩家等级            elif int(tabtmp['task_win']) == 3:#武将升级                tasktmp = pTasks.add()                tasktmp.taskCID = tid                tasktmp.stats = self.daytask[tid]                tasktmp.taskProcess = self.heroLeveUpTimes #返回给英雄升级次数            elif int(tabtmp['task_win']) == 4:#装备升级                tasktmp = pTasks.add()                tasktmp.taskCID = tid                tasktmp.stats = self.daytask[tid]                tasktmp.taskProcess = self.equipLeveUpTimes #返回给升级次数            elif int(tabtmp['task_win']) == 5:#技能升级                tasktmp = pTasks.add()                tasktmp.taskCID = tid                tasktmp.stats = self.daytask[tid]                tasktmp.taskProcess = self.skillLeveUpTimes #返回给升级次数            elif int(tabtmp['task_win']) == 6:#完成军机处                tasktmp = pTasks.add()                tasktmp.taskCID = tid                tasktmp.stats = self.daytask[tid]                tasktmp.taskProcess = self.PKTimes #返回给军机处攻打次数            elif int(tabtmp['task_win']) == 7:#完成试练塔                tasktmp = pTasks.add()                tasktmp.taskCID = tid                tasktmp.stats = self.daytask[tid]                tasktmp.taskProcess = self.TowerTimes #返回给试练塔攻打次数            elif int(tabtmp['task_win']) == 8:#完成风云争霸                tasktmp = pTasks.add()                tasktmp.taskCID = tid                tasktmp.stats = self.daytask[tid]                tasktmp.taskProcess = self.resPKTimes #返回风云争霸挑战次数            elif int(tabtmp['task_win']) == 9:#完成N次关卡                tasktmp = pTasks.add()                tasktmp.taskCID = tid                tasktmp.stats = self.daytask[tid]                tasktmp.taskProcess = self.stagePassTimes #返回风云争霸挑战次数        for tid in self.storytask.keys():            tabtmp = self.user.userCacheT.getConfigDataWithTableNameAndID('tab_task',tid)            if int(tabtmp['task_win']) == 1:#玩家等级任务                tasktmp = pTasks.add()                tasktmp.taskCID = tid                tasktmp.stats = self.storytask[tid]                tasktmp.taskProcess = self.user.userBase.level #返回当前玩家等级            elif int(tabtmp['task_win']) == 2:#完成第N关任务                tasktmp = pTasks.add()                tasktmp.taskCID = tid                tasktmp.stats = self.storytask[tid]                tasktmp.taskProcess = self.lastPassStage #返回最近一次打通的关卡            elif int(tabtmp['task_win']) == 3:#武将升级                tasktmp = pTasks.add()                tasktmp.taskCID = tid                tasktmp.stats = self.storytask[tid]                tasktmp.taskProcess = self.heroLeveUpTimes #返回给英雄升级次数            elif int(tabtmp['task_win']) == 4:#装备升级                tasktmp = pTasks.add()                tasktmp.taskCID = tid                tasktmp.stats = self.storytask[tid]                tasktmp.taskProcess = self.equipLeveUpTimes #返回给升级次数            elif int(tabtmp['task_win']) == 5:#技能升级                tasktmp = pTasks.add()                tasktmp.taskCID = tid                tasktmp.stats = self.storytask[tid]                tasktmp.taskProcess = self.skillLeveUpTimes #返回给升级次数            elif int(tabtmp['task_win']) == 6:#完成军机处                tasktmp = pTasks.add()                tasktmp.taskCID = tid                tasktmp.stats = self.storytask[tid]                tasktmp.taskProcess = self.PKTimes #返回给军机处攻打次数            elif int(tabtmp['task_win']) == 7:#完成试练塔                tasktmp = pTasks.add()                tasktmp.taskCID = tid                tasktmp.stats = self.storytask[tid]                tasktmp.taskProcess = self.TowerTimes #返回给试练塔攻打次数            elif int(tabtmp['task_win']) == 8:#完成风云争霸                tasktmp = pTasks.add()                tasktmp.taskCID = tid                tasktmp.stats = self.storytask[tid]                tasktmp.taskProcess = self.resPKTimes #返回风云争霸挑战次数            elif int(tabtmp['task_win']) == 9:#完成N次关卡                tasktmp = pTasks.add()                tasktmp.taskCID = tid                tasktmp.stats = self.storytask[tid]                tasktmp.taskProcess = self.stagePassTimes #返回风云争霸挑战次数#         self.userLeveTask = {}      #玩家等级相关任务#         self.stageTask = {}    #通过关卡类任务#         self.heroLeveUpTask = {}    #武将升级相关任务#         self.skillLeveUpTask = {}   #技能升级相关任务#         self.equipLeveUpTask = {}   #装备升级相关任务#         self.userPKTask = {}        #军机处PK相关任务#         self.towerTask = {}         #试练塔相关任务#         self.resPKTask = {}         #风云争霸相关任务#         self.passStageTimeTask = {} #通关次数相关任务        alltasktab = self.user.userCacheT.getConfigTableWithTableName('tab_task')        for tid in alltasktab.keys():            if self.storytask.has_key(tid) or self.daytask.has_key(tid):                continue            elif int(alltasktab[tid]['task_type']) == 1:                tmptid = int(alltasktab[tid]['pre_task_id'])                if tmptid != 0 and (self.storytask.has_key(tmptid) or self.daytask.has_key(tmptid)):                    tasktmp = pTasks.add()                    tasktmp.taskCID = tid                    tasktmp.stats = self.stataNoComplete                    tasktmp.taskProcess = 0                elif tmptid == 0:                    tasktmp = pTasks.add()                    tasktmp.taskCID = tid                    tasktmp.stats = self.stataNoComplete                    tasktmp.taskProcess = 0            else:                tasktmp = pTasks.add()                tasktmp.taskCID = tid                tasktmp.stats = self.stataNoComplete                tasktmp.taskProcess = 0    #第二天重置日常任务    def resetDayTask(self):        for tid in self.daytask.keys():            tabtmp = self.user.userCacheT.getConfigDataWithTableNameAndID('tab_task',tid)            if int(tabtmp['task_win']) == 1:#玩家等级任务                pass            elif int(tabtmp['task_win']) == 2:#完成第N关任务                pass            elif int(tabtmp['task_win']) == 3:#武将升级                self.heroLeveUpTimes = 0                self.heroStarUpTimes = 0            elif int(tabtmp['task_win']) == 4:#装备升级                self.equipLeveUpTimes = 0                self.equipStarUpTimes = 0            elif int(tabtmp['task_win']) == 5:#技能升级                self.skillLeveUpTimes = 0            elif int(tabtmp['task_win']) == 6:#完成军机处                self.PKTimes = 0            elif int(tabtmp['task_win']) == 7:#完成试练塔                self.TowerTimes = 0            elif int(tabtmp['task_win']) == 8:#完成风云争霸                self.resPKTimes = 0            elif int(tabtmp['task_win']) == 9:#完成N次关卡                self.stagePassTimes = 0        self.daytask.clear()    def getMysqlDayStr(self):        cmdstr = ''        for kx in self.daytask:            cmdstr += str(kx)+',' + str(self.daytask[kx]) + ';'        cmdstr = cmdstr[:-1]        return cmdstr    def getMySqlStoryStr(self):        cmdstr = ''        for kx in self.storytask:            cmdstr += str(kx)+ ',' + str(self.storytask[kx]) + ';'        cmdstr = cmdstr[:-1]        return cmdstr    def getTimeDay(self):        loctim = time.localtime()        return int(loctim.tm_mday)    def setComTaskFromMysql(self,dayStr,storyStr,daycount):        if dayStr != None and dayStr != '':            dattmp = dayStr.split(';')            for tmpstr in dattmp:                tmpd = tmpstr.split(',')                self.daytask[int(tmpd[0])] = int(tmpd[1])        if storyStr != None and storyStr != '':            sdattmp = storyStr.split(';')            for tmpstr in sdattmp:                tmpd = tmpstr.split(',')                self.storytask[int(tmpd[0])] = int(tmpd[1])        loctim = time.localtime()        if loctim.tm_mday > int(daycount):            self.resetDayTask()    #测试是否有任务完成    def testTaskForEvent(self,taskcomType):        tmpid = []        if taskcomType == taskFlog.TaskFlog_UserLeveUp:            if len(self.userLeveTask) > 0:                for tid in self.userLeveTask.keys():                    tmpdat = self.userLeveTask[tid]                    if self.user.userBase.level >= int(tmpdat['task_time']):                        if int(tmpdat['task_type']) == 2 and (not self.daytask.has_key(tid)):                            tmpid.append(tid)                            self.daytask[tid] = self.stataCompleteNoGet                                  elif int(tmpdat['task_type']) == 1 and (not self.storytask.has_key(tid)):                            tmpid.append(tid)                            self.storytask[tid] = self.stataCompleteNoGet         elif taskcomType == taskFlog.TaskFlog_PassStageWithID:            if len(self.stageTask) > 0:                for tid in self.stageTask.keys():                    tmpdat = self.stageTask[tid]                    if self.lastPassStage == int(tmpdat['task_type']):                        if int(tmpdat['task_type']) == 1 and (not self.storytask.has_key(tid)):                            tmpid.append(tid)                            self.storytask[tid] = self.stataCompleteNoGet                              elif int(tmpdat['task_type']) == 2 and (not self.daytask.has_key(tid)):                            tmpid.append(tid)                            self.daytask[tid] = self.stataCompleteNoGet             if len(self.passStageTimeTask) > 0:                for tid in self.passStageTimeTask.keys():                    tmpdat = self.passStageTimeTask[tid]                    if self.stagePassTimes >= int(tmpdat['task_type']):                        if int(tmpdat['task_type']) == 1 and (not self.storytask.has_key(tid)):                            tmpid.append(tid)                            self.storytask[tid] = self.stataCompleteNoGet                             elif int(tmpdat['task_type']) == 2 and (not self.daytask.has_key(tid)):                            tmpid.append(tid)                            self.daytask[tid] = self.stataCompleteNoGet         elif taskcomType == taskFlog.TaskFlog_HeroLeveUp:            if len(self.heroLeveUpTask) > 0:                for tid in self.heroLeveUpTask.keys():                    tmpdat = self.heroLeveUpTask[tid]                    if self.heroLeveUpTimes >= int(tmpdat['task_type']):                        if int(tmpdat['task_type']) == 1 and (not self.storytask.has_key(tid)):                            tmpid.append(tid)                            self.storytask[tid] = self.stataCompleteNoGet                            elif int(tmpdat['task_type']) == 2 and (not self.daytask.has_key(tid)):                            tmpid.append(tid)                            self.daytask[tid] = self.stataCompleteNoGet         elif taskcomType == taskFlog.TaskFlog_EquipLeveUp:            if len(self.equipLeveUpTask) > 0:                for tid in self.equipLeveUpTask.keys():                    tmpdat = self.equipLeveUpTask[tid]                    if self.equipLeveUpTimes >= int(tmpdat['task_type']):                        if int(tmpdat['task_type']) == 1 and (not self.storytask.has_key(tid)):                            tmpid.append(tid)                            self.storytask[tid] = self.stataCompleteNoGet                         elif int(tmpdat['task_type']) == 2 and (not self.daytask.has_key(tid)):                            tmpid.append(tid)                            self.daytask[tid] = self.stataCompleteNoGet             elif taskcomType == taskFlog.TaskFlog_SkillLeveUp:            if len(self.skillLeveUpTask) > 0:                for tid in self.skillLeveUpTask.keys():                    tmpdat = self.skillLeveUpTask[tid]                    if self.skillLeveUpTimes >= int(tmpdat['task_type']):                        if int(tmpdat['task_type']) == 1 and (not self.storytask.has_key(tid)):                            tmpid.append(tid)                            self.storytask[tid] = self.stataCompleteNoGet                            elif int(tmpdat['task_type']) == 2 and (not self.daytask.has_key(tid)):                            tmpid.append(tid)                            self.daytask[tid] = self.stataCompleteNoGet             elif taskcomType == taskFlog.TaskFlog_PK:            if len(self.userPKTask) > 0:                for tid in self.userPKTask.keys():                    tmpdat = self.userPKTask[tid]                    if self.PKTimes >= int(tmpdat['task_type']):                        if int(tmpdat['task_type']) == 1 and (not self.storytask.has_key(tid)):                            tmpid.append(tid)                            self.storytask[tid] = self.stataCompleteNoGet                         elif int(tmpdat['task_type']) == 2 and (not self.daytask.has_key(tid)):                            tmpid.append(tid)                            self.daytask[tid] = self.stataCompleteNoGet         elif taskcomType == taskFlog.TaskFlog_Tower:            if len(self.towerTask) > 0:                for tid in self.towerTask.keys():                    tmpdat = self.towerTask[tid]                    if self.TowerTimes >= int(tmpdat['task_type']):                        if int(tmpdat['task_type']) == 1 and (not self.storytask.has_key(tid)):                            tmpid.append(tid)                            self.storytask[tid] = self.stataCompleteNoGet                         elif int(tmpdat['task_type']) == 2 and (not self.daytask.has_key(tid)):                            tmpid.append(tid)                            self.daytask[tid] = self.stataCompleteNoGet         elif taskcomType == taskFlog.TaskFlog_ResPK:            if len(self.resPKTask) > 0:                for tid in self.resPKTask.keys():                    tmpdat = self.resPKTask[tid]                    if self.resPKTimes >= int(tmpdat['task_type']):                        if int(tmpdat['task_type']) == 1 and (not self.storytask.has_key(tid)):                            tmpid.append(tid)                            self.storytask[tid] = self.stataCompleteNoGet                         elif int(tmpdat['task_type']) == 2 and (not self.daytask.has_key(tid)):                            tmpid.append(tid)                            self.daytask[tid] = self.stataCompleteNoGet         elif taskcomType == taskFlog.TaskFlog_StagePassCount:            pass        return tmpid    def stagePass(self,stageID,ptype):#关卡通关        self.stagePassTimes += 1        self.lastPassStage = stageID        return self.testTaskForEvent(taskFlog.TaskFlog_PassStageWithID)    def userLeveUp(self):#玩家升级        return self.testTaskForEvent(taskFlog.TaskFlog_UserLeveUp)    #武将升星或者升级    def heroLeveUp(self,heroNID,uptimes = 1,upType = 1): #upType,1.英雄升级,2.英雄升星        if upType == 1:            self.heroLeveUpTimes += uptimes        elif upType == 2:            self.heroStarUpTimes += uptimes        return self.testTaskForEvent(taskFlog.TaskFlog_HeroLeveUp)    #装备升星或者升级    def equipLeveUp(self,equipNID,uptimes = 1,upType = 1): #upType,1.装备升级,2.装备升星        if upType == 1:            self.equipLeveUpTimes += uptimes        elif upType == 2:            self.equipStarUpTimes += uptimes        return self.testTaskForEvent(taskFlog.TaskFlog_EquipLeveUp)    #技能升星或者升级    def skillLeveUp(self,skillNID,uptimes = 1,upType = 1): #upType,1.技能升级,2.技能升星        if upType == 1:            self.skillLeveUpTask += uptimes        else:#技能没有升星            self.skillLeveUpTask += uptimes        return self.testTaskForEvent(taskFlog.TaskFlog_SkillLeveUp)    #军机处完成战斗    def completePK(self,ptimes = 1): #ptimes,军机处完成战斗次数        self.PKTimes += ptimes        return self.testTaskForEvent(taskFlog.TaskFlog_PK)    #完成试练塔    def completeTower(self,towerStep): #towerStep:试练塔层数        self.TowerTimes += 1        self.lastTowerStep = towerStep        return self.testTaskForEvent(taskFlog.TaskFlog_Tower)    #完成风云争霸    def completeResPK(self,ptimes = 1): #ptimes,风云争霸完成次数        self.resPKTimes += ptimes        return  self.testTaskForEvent(taskFlog.TaskFlog_ResPK)    def initTaskFromTab(self):        alltasktab = self.user.userCacheT.getConfigTableWithTableName('tab_task')        for tx in alltasktab.keys():            tabtmp = alltasktab[tx]            if int(tabtmp['task_win']) == 1:#玩家等级任务                self.userLeveTask[tx] = tabtmp            elif int(tabtmp['task_win']) == 2:#完成第N关任务                self.stageTask[tx] = tabtmp            elif int(tabtmp['task_win']) == 3:#武将升级                self.heroLeveUpTask[tx] = tabtmp            elif int(tabtmp['task_win']) == 4:#装备升级                self.skillLeveUpTask[tx] = tabtmp            elif int(tabtmp['task_win']) == 5:#技能升级                self.equipLeveUpTask[tx] = tabtmp            elif int(tabtmp['task_win']) == 6:#完成军机处                self.userPKTask[tx] = tabtmp            elif int(tabtmp['task_win']) == 7:#完成试练塔                self.towerTask[tx] = tabtmp            elif int(tabtmp['task_win']) == 8:#完成风云争霸                self.resPKTask[tx] = tabtmp            elif int(tabtmp['task_win']) == 9:#完成N次关卡                self.passStageTimeTask[tx] = tabtmp